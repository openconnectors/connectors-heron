plugins {
	id "com.github.johnrengelman.shadow" version "2.0.1"
}

allprojects {

}

ext.heronVersion = "0.17.2"
ext.coreVersion = "0.0.1"

subprojects {

	def getVersionTag = { ->
    	def stdout = new ByteArrayOutputStream()
    		exec {
        		commandLine 'git', 'rev-list', 'HEAD', '--count'
        		standardOutput = stdout
    	}
    	return stdout.toString().trim()
	}

	apply plugin: 'java'
	apply plugin: 'maven'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

    group   = 'io.github.openconnectors'
    version = System.env['CONNECTOR_VERION'] ?: '0.0.' + getVersionTag()

	repositories {
		jcenter()
	}

	test {
		useTestNG()
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	// summarize artifacts
	artifacts {
	    archives jar
	    archives sourcesJar
	    archives javadocJar
	}

	apply plugin: 'com.github.johnrengelman.shadow'

 	shadowJar {
    	mergeServiceFiles {
      		include 'reference.conf'
    	}
	}

	task createPom {
		apply plugin: 'maven'
		description "Generates pom.xml"
		pom {
			project {
				url 'https://github.com/openconnectors/connectors'
				groupId project.group
				artifactId 'connector' + '-' + project.name
				version project.version
				packaging 'jar'
				name artifactId
				description "Open Connector component"
				inceptionYear '2017'
            	licenses {
                	license {
                    	name 'The Apache Software License, Version 2.0'
                    	url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    	distribution 'repo'
                	}
            	}
            	developers {
        			developer {
            			id 'Ali Ahmed'
            			email 'alahmed.se@gmail.com'
        			}
    			}
    			scm {
       				connection 'git@github.com:openconnectors/connectors.git'
        			url 'https://github.com/openconnectors/connectors'
    			}
			}
		}.writeTo("$buildDir/pom.xml")
	}

}

//Heron Kafka
project(':heron-kafka010') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-kafka010', version: coreVersion
	}
}

//Heron Pulsar
project(':heron-pulsar') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-pulsar', version: coreVersion
	}
}

//Heron Aerospike
project(':heron-aerospike') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-aerospike', version: coreVersion
	}
}

//Heron Cassandra
project(':heron-cassandra') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-cassandra', version: coreVersion
	}
}

//Heron JDBC
project(':heron-jdbc') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-jdbc', version: coreVersion
	}
}

//Heron Twitter
project(':heron-twitter') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-twitter', version: coreVersion
	}
}

//Heron ElasticSearch
project(':heron-elasticsearch5') {
	dependencies {
		compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
		compile group: 'io.github.openconnectors', name: 'connector-elasticsearch5', version: coreVersion
	}
}

//Heron S3
project(':heron-s3') {
    dependencies {
        compile group: 'io.github.openconnectors', name: 'connector-core', version: coreVersion
    }
}

//Examples heron toplogies
project(':examples-heron') {
    dependencies {
    	compile project(':heron-kafka010')
    	compile project(':heron-pulsar')
    	compile project(':heron-cassandra')
    	compile project(':heron-elasticsearch5')
    	compile project(':heron-aerospike')
    	compile project(':heron-jdbc')
    	compile project(':heron-twitter')
    	compile project(':heron-s3')
    }
}
